clients:
    # Type
    type: simple

    # The total number of clients
    total_clients: 10

    # The number of clients selected in each round
    per_round: 10

    # Should the clients compute test accuracy locally?
    do_test: true

    # Whether or not to simulate communication when running on a single machine
    comm_simulation: true
    compute_comm_time: true

    # Whether client heterogeneity should be simulated
    speed_simulation: true

    # The simulation distribution
    simulation_distribution:
        #staleness is simulated from uniform distribution as mentioned in Section 5.2
        distribution: uniform
        low: 0
        high: 0

    additional_delay:
        low: 0
        high: 0

    random_seed: 42

server:
    address: 127.0.0.1
    port: 8001
    synchronous: false
    simulate_wall_time: false
    do_test: false
    do_final_validation: true
    do_final_test: true

    # Parameter for FedAsync
    periodic_interval: 30
    staleness_bound: 99999
    minimum_clients_aggregated: 1
    mixing_hyperparameter: 0.9
    adaptive_mixing: true
    size_weighting_function:
        type: total
    staleness_weighting_function:
        type: polynomial
        a: 1

    checkpoint_path: models/fedasync/cifar10
    model_path: models/fedasync/cifar10

    downlink_bandwidth: 100
    uplink_bandwidth: 100

    random_seed: 42

data:
    # The training and testing dataset
    datasource: CIFAR10

    # Number of samples in each partition
    partition_size: 6000

    # IID or non-IID?
    sampler: noniid

    # The concentration parameter for the Dirichlet distribution
    concentration: 100

    random_seed: 42
    reload_data: true

trainer:
    # The type of the trainer
    type: basic

    # The maximum number of training rounds
    rounds: 100

    # The maximum number of clients running concurrently
    max_concurrency: 10

    # The machine learning model
    model_name: resnet_18

    # Number of epoches for local training in each communication round
    epochs: 5
    batch_size: 32
    optimizer: Adam
    loss_criterion: CrossEntropyLoss

algorithm:
    # Aggregation algorithm
    type: fedavg

parameters:
    experiment_name: "cifar10_proposal_1"
    optimizer:
        lr: 0.001

wandb:
    project_name: "fedasync-with-fairness"
    entity_name: "thecml"

results:
    result_path: results/fedasync/cifar10
    # Write the following parameter(s) into a CSV
    types: aggregations, round, elapsed_time, comm_time, round_time, comm_overhead, train_loss, train_accuracy, test_loss, test_accuracy

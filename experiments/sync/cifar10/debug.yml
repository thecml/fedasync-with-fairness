clients:
    # Type
    type: simple

    # The total number of clients
    total_clients: 2

    # The number of clients selected in each round
    per_round: 2

    # Should the clients compute test accuracy locally?
    do_test: true

    # Whether or not to simulate communication when running on a single machine
    comm_simulation: true
    compute_comm_time: true

server:
    address: 127.0.0.1
    port: 8001
    synchronous: true
    simulate_wall_time: true
    do_test: false
    do_final_test: true

    checkpoint_path: models/fedavg/mnistDev
    model_path: models/fedavg/mnistDev

    downlink_bandwidth: 100
    uplink_bandwidth: 100

data:
    # The training and testing dataset
    datasource: PartitionedCIFAR10

    # Number of samples in each partition
    #partition_size: 1000

    # IID or non-IID?
    sampler: all_inclusive
    testset_sampler: all_inclusive
    # The concentration parameter for the Dirichlet distribution
    #concentration: 5

    # The random seed for sampling data
    #random_seed: 1

trainer:
    # The type of the trainer
    type: basic

    # The maximum number of training rounds
    rounds: 5

    # The maximum number of clients running concurrently
    max_concurrency: 10

    # The target accuracy
    #target_accuracy: 0.98

    # The machine learning model
    model_name: lowgpuCifar10

    # Number of epoches for local training in each communication round
    epochs: 1
    batch_size: 64
    optimizer: RMSprop

    loss_criterion: CrossEntropyLoss

algorithm:
    # Aggregation algorithm
    type: fedavg

parameters:
    experiment_name: "DEBUG"
    optimizer:
        lr: 0.001
        momentum: 0.0 # learning rate is fixed as in Appendix C.2
        weight_decay: 0

results:
    num_classes: 10
    result_path: results/fedavg/mnistDev
    # Write the following parameter(s) into a CSV
    types: round, elapsed_time, comm_time, round_time, comm_overhead, train_loss, test_loss, auroc, accuracy, precision, recall
